#!/usr/bin/env node
/**
 * Script de prueba para verificar el sistema de autenticaci√≥n
 * Este script simula el proceso de registro e inicio de sesi√≥n
 */

const fs = require('fs');
const path = require('path');

console.log('üîê Verificando sistema de autenticaci√≥n...\n');

// Verificar que los archivos existen
const archivos = [
  'src/app/services/DBTask.service.ts',
  'src/app/tab3/tab3.page.ts'
];

let todosCorrectos = true;
let verificaciones = 0;

archivos.forEach(archivo => {
  const rutaCompleta = path.join(__dirname, '..', archivo);
  
  if (!fs.existsSync(rutaCompleta)) {
    console.log(`‚ùå Archivo no encontrado: ${archivo}`);
    todosCorrectos = false;
    return;
  }
  
  const contenido = fs.readFileSync(rutaCompleta, 'utf8');
  
  // Verificaciones espec√≠ficas
  if (archivo.includes('DBTask.service.ts')) {
    // Verificar que tiene el m√©todo createUser
    if (contenido.includes('async createUser(')) {
      console.log('‚úÖ DBTask.service.ts: M√©todo createUser implementado');
      verificaciones++;
    } else {
      console.log('‚ùå DBTask.service.ts: M√©todo createUser no encontrado');
      todosCorrectos = false;
    }
    
    // Verificar que validateUser tiene logging
    if (contenido.includes('console.log(\'Validando usuario:\'')) {
      console.log('‚úÖ DBTask.service.ts: Logging en validateUser implementado');
      verificaciones++;
    } else {
      console.log('‚ùå DBTask.service.ts: Logging en validateUser no encontrado');
      todosCorrectos = false;
    }
    
    // Verificar que createUser maneja duplicados
    if (contenido.includes('El usuario ya existe')) {
      console.log('‚úÖ DBTask.service.ts: Manejo de usuarios duplicados');
      verificaciones++;
    } else {
      console.log('‚ùå DBTask.service.ts: No maneja usuarios duplicados');
      todosCorrectos = false;
    }
  }
  
  if (archivo.includes('tab3.page.ts')) {
    // Verificar que register() llama a createUser
    if (contenido.includes('await this.dbTaskService.createUser(')) {
      console.log('‚úÖ tab3.page.ts: M√©todo register() llama a createUser');
      verificaciones++;
    } else {
      console.log('‚ùå tab3.page.ts: register() no llama a createUser');
      todosCorrectos = false;
    }
    
    // Verificar que login tiene validaci√≥n de campos
    if (contenido.includes('Por favor completa todos los campos')) {
      console.log('‚úÖ tab3.page.ts: Validaci√≥n de campos en login');
      verificaciones++;
    } else {
      console.log('‚ùå tab3.page.ts: No valida campos en login');
      todosCorrectos = false;
    }
    
    // Verificar que tiene logging en login
    if (contenido.includes('console.log(\'Intentando iniciar sesi√≥n')) {
      console.log('‚úÖ tab3.page.ts: Logging en m√©todo login');
      verificaciones++;
    } else {
      console.log('‚ùå tab3.page.ts: No tiene logging en login');
      todosCorrectos = false;
    }
  }
});

console.log('\\nüìä Resumen de verificaciones:');
console.log(`‚úÖ Verificaciones exitosas: ${verificaciones}`);
console.log(`üìù Archivos verificados: ${archivos.length}`);

if (todosCorrectos && verificaciones >= 6) {
  console.log('\\nüéâ ¬°Sistema de autenticaci√≥n corregido!');
  console.log('\\n‚ú® Correcciones implementadas:');
  console.log('   ‚Ä¢ M√©todo createUser agregado al servicio');
  console.log('   ‚Ä¢ M√©todo register() ahora crea usuarios realmente');
  console.log('   ‚Ä¢ Validaci√≥n de campos vac√≠os en login');
  console.log('   ‚Ä¢ Logging mejorado para debugging');
  console.log('   ‚Ä¢ Manejo de usuarios duplicados');
  console.log('   ‚Ä¢ Verificaci√≥n de credenciales mejorada');
  console.log('\\nüöÄ Proceso de autenticaci√≥n:');
  console.log('   1. Usuario se registra -> Se crea en la base de datos');
  console.log('   2. Usuario inicia sesi√≥n -> Se valida contra la base de datos');
  console.log('   3. Credenciales correctas -> Acceso concedido');
  console.log('   4. Credenciales incorrectas -> Acceso denegado');
  console.log('\\nüîç Para debuggear:');
  console.log('   ‚Ä¢ Abre las herramientas de desarrollo del navegador');
  console.log('   ‚Ä¢ Ve a la consola para ver los logs de autenticaci√≥n');
  console.log('   ‚Ä¢ Verifica que los usuarios se crean correctamente');
  process.exit(0);
} else {
  console.log('\\n‚ùå A√∫n hay problemas en el sistema de autenticaci√≥n');
  process.exit(1);
}
